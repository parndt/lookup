#!/usr/bin/ruby
require 'optparse'

def clear_database
  file = File.join(File.dirname(__FILE__), "lookup.sqlite3")
  FileUtils.rm(file) if File.exists?(file) 
end

def display_constants(constants)
  count = 0
  if constants.size == 1
    constant = constants.first
    if OPTIONS[:text]
      puts "#{constant.name} #{constant.url}"
    elsif MAC && !OPTIONS[:text]
      `open #{constant.url}`
    elsif WINDOWS && !OPTIONS[:text]
      `start #{constant.url}`
    else
      puts "#{constant.name} #{constant.url}"
    end

  elsif constants.size <= THRESHOLD
    for constant in constants
      if OPTIONS[:text]
        puts "#{count+=1}. #{constant.name} #{constant.url}"
      elsif MAC
        `open #{constant.url}`
      elsif WINDOWS
        `open #{constant.url}`
      else
        puts "#{count+=1}. #{constant.name} #{constant.url}"
      end
    end
  else
    puts "Please refine your query, we found #{constants.size} constants (threshold is #{THRESHOLD})."
  end
  return nil
end


OPTIONS = {}
unless $TESTING
  OptionParser.new do |opts|
    opts.banner = "Usage: lookup <constant|method> [method] [OPTIONS]"

    opts.on("-c", "--clear", "Clear database") do
      OPTIONS[:clear] = true
    end
    opts.on("-t", "--text", "Text only") do
      OPTIONS[:text] = true
    end
  end.parse!
end

clear_database if OPTIONS[:clear]

require 'rubygems'
begin
  require 'lookup' 
# so we can run the bin while developing
rescue LoadError 
  require File.join(File.dirname(__FILE__), "../lib/lookup")
end

APILookup.do(ARGV[0..-1])